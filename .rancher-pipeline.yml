stages:
- name: build
  steps:
  - runScriptConfig:
      image: golang:1.10.7
      shellScript: |-
        #mkdir -p /etc/docker/certs.d/slg.registry.com
        #cp certs/domain.crt /etc/docker/certs.d/slg.registry.com/ca.crt
        echo "192.168.1.98 registry.slg" >> /etc/hosts
        cat /etc/hosts
        #tls=$(openssl version -d | awk -F '"' '{print $2}')
        #cp certs/domain.crt /usr/share/ca-certificates/slg.registry.com.crt

        #echo "slg.registry.com.crt" >> /etc/ca-certificates.conf
        #update-ca-certificates --fresh

        #curl https://registry.slg/v2/_catalog

        #curl https://docker-registry/v2/_catalog


        #cat $tls
        #cat certs/domain.crt >> $tls
        #cat $tls
        #cat certs/domain.crt >> $(openssl version -d)/certs/ca-bundle.crt
        #ls /etc/pki/tls
        #chmod 777 /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        #cat certs/domain.crt >> /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: rancher-test:${CICD_EXECUTION_SEQUENCE}
      registry: 192.168.1.98:5000
      pushRemote: true
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
timeout: 60
